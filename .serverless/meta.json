{
  "/Users/boan/work/js24/quiztopia/serverless.yml": {
    "versionFramework": "4.20.2",
    "servicePath": "/Users/boan/work/js24/quiztopia/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "quiztopia",
      "provider": {
        "name": "aws",
        "runtime": "nodejs22.x",
        "region": "eu-north-1",
        "environment": {
          "QUIZGAME_TABLE": "QuizGame",
          "JWT_SECRET": "<REDACTED>"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:PutItem",
              "dynamodb:GetItem",
              "dynamodb:UpdateItem",
              "dynamodb:DeleteItem",
              "dynamodb:Query",
              "dynamodb:Scan"
            ],
            "Resource": "arn:aws:dynamodb:eu-north-1:*:table/QuizGame"
          }
        ],
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "SignupLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-dev-signup"
              }
            },
            "LoginLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-dev-login"
              }
            },
            "CreateQuizLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-dev-createQuiz"
              }
            },
            "DeleteQuizLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-dev-deleteQuiz"
              }
            },
            "GetQuizByQuizIdLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-dev-getQuizByQuizId"
              }
            },
            "GetAllQuizzesByUserLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-dev-getAllQuizzesByUser"
              }
            },
            "GetAllQuizzesByCoordinatesLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-dev-getAllQuizzesByCoordinates"
              }
            },
            "AddQuestionLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-dev-addQuestion"
              }
            },
            "UpdateQuestionLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-dev-updateQuestion"
              }
            },
            "DeleteQuestionLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-dev-deleteQuestion"
              }
            },
            "AnswerQuestionLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-dev-answerQuestion"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "quiztopia",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quiztopia-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quiztopia-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:PutItem",
                            "dynamodb:GetItem",
                            "dynamodb:UpdateItem",
                            "dynamodb:DeleteItem",
                            "dynamodb:Query",
                            "dynamodb:Scan"
                          ],
                          "Resource": "arn:aws:dynamodb:eu-north-1:*:table/QuizGame"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "quiztopia",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "SignupLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                  "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
                },
                "Handler": "functions/signUp/index.handler",
                "Runtime": "nodejs22.x",
                "FunctionName": "quiztopia-dev-signup",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "QUIZGAME_TABLE": "QuizGame",
                    "JWT_SECRET": "<REDACTED>"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "SignupLogGroup"
              ]
            },
            "LoginLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                  "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
                },
                "Handler": "functions/logIn/index.handler",
                "Runtime": "nodejs22.x",
                "FunctionName": "quiztopia-dev-login",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "QUIZGAME_TABLE": "QuizGame",
                    "JWT_SECRET": "<REDACTED>"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "LoginLogGroup"
              ]
            },
            "CreateQuizLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                  "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
                },
                "Handler": "functions/createQuiz/index.handler",
                "Runtime": "nodejs22.x",
                "FunctionName": "quiztopia-dev-createQuiz",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "QUIZGAME_TABLE": "QuizGame",
                    "JWT_SECRET": "<REDACTED>"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "CreateQuizLogGroup"
              ]
            },
            "DeleteQuizLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                  "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
                },
                "Handler": "functions/deleteQuiz/index.handler",
                "Runtime": "nodejs22.x",
                "FunctionName": "quiztopia-dev-deleteQuiz",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "QUIZGAME_TABLE": "QuizGame",
                    "JWT_SECRET": "<REDACTED>"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "DeleteQuizLogGroup"
              ]
            },
            "GetQuizByQuizIdLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                  "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
                },
                "Handler": "functions/getQuizByQuizId/index.handler",
                "Runtime": "nodejs22.x",
                "FunctionName": "quiztopia-dev-getQuizByQuizId",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "QUIZGAME_TABLE": "QuizGame",
                    "JWT_SECRET": "<REDACTED>"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetQuizByQuizIdLogGroup"
              ]
            },
            "GetAllQuizzesByUserLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                  "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
                },
                "Handler": "functions/getAllQuizzesByUser/index.handler",
                "Runtime": "nodejs22.x",
                "FunctionName": "quiztopia-dev-getAllQuizzesByUser",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "QUIZGAME_TABLE": "QuizGame",
                    "JWT_SECRET": "<REDACTED>"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetAllQuizzesByUserLogGroup"
              ]
            },
            "GetAllQuizzesByCoordinatesLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                  "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
                },
                "Handler": "functions/getAllQuizzesByCoordinates/index.handler",
                "Runtime": "nodejs22.x",
                "FunctionName": "quiztopia-dev-getAllQuizzesByCoordinates",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "QUIZGAME_TABLE": "QuizGame",
                    "JWT_SECRET": "<REDACTED>"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetAllQuizzesByCoordinatesLogGroup"
              ]
            },
            "AddQuestionLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                  "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
                },
                "Handler": "functions/addQuestionToQuiz/index.handler",
                "Runtime": "nodejs22.x",
                "FunctionName": "quiztopia-dev-addQuestion",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "QUIZGAME_TABLE": "QuizGame",
                    "JWT_SECRET": "<REDACTED>"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "AddQuestionLogGroup"
              ]
            },
            "UpdateQuestionLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                  "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
                },
                "Handler": "functions/updateQuestion/index.handler",
                "Runtime": "nodejs22.x",
                "FunctionName": "quiztopia-dev-updateQuestion",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "QUIZGAME_TABLE": "QuizGame",
                    "JWT_SECRET": "<REDACTED>"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "UpdateQuestionLogGroup"
              ]
            },
            "DeleteQuestionLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                  "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
                },
                "Handler": "functions/deleteQuestion/index.handler",
                "Runtime": "nodejs22.x",
                "FunctionName": "quiztopia-dev-deleteQuestion",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "QUIZGAME_TABLE": "QuizGame",
                    "JWT_SECRET": "<REDACTED>"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "DeleteQuestionLogGroup"
              ]
            },
            "AnswerQuestionLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                  "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
                },
                "Handler": "functions/answerQuestion/index.handler",
                "Runtime": "nodejs22.x",
                "FunctionName": "quiztopia-dev-answerQuestion",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "QUIZGAME_TABLE": "QuizGame",
                    "JWT_SECRET": "<REDACTED>"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "AnswerQuestionLogGroup"
              ]
            },
            "SignupLambdaVersionGYhOlpCf3OxG8OQRN6KWFKQFqIJ4TaGOmdpGfKN5P4": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "SignupLambdaFunction"
                },
                "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
              }
            },
            "LoginLambdaVersionSA9r1WVNZ8L9qDrhowr17HnnD6wPcpNe7SxYA1Oek": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "LoginLambdaFunction"
                },
                "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
              }
            },
            "CreateQuizLambdaVersionE0QHsSKk7s4Y0f3BeGwKeyPT4gaYhdrZC4O0IVrDnQ": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CreateQuizLambdaFunction"
                },
                "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
              }
            },
            "DeleteQuizLambdaVersionxVB4YRKWDgON3JoTEDEhKfhYeYo47lts9Gc1y9iaM9U": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "DeleteQuizLambdaFunction"
                },
                "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
              }
            },
            "GetQuizByQuizIdLambdaVersiontRJ5kjCVNGYlm2qjMIrlxrVwH8fLdq3kEBghN1aq44": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetQuizByQuizIdLambdaFunction"
                },
                "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
              }
            },
            "GetAllQuizzesByUserLambdaVersionuj4u8A7sMu3P32uyBakK9mQuTHOxgrOOvexjfSj5Fw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetAllQuizzesByUserLambdaFunction"
                },
                "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
              }
            },
            "GetAllQuizzesByCoordinatesLambdaVersionR4qcFoPnr6rUMbJzj4rPw3zQAQSu56iNsLtCfiC5w": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetAllQuizzesByCoordinatesLambdaFunction"
                },
                "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
              }
            },
            "AddQuestionLambdaVersion6dGm3byANuYV6AwHGAwOcPvrAmbg1cU8oyqRUh44": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "AddQuestionLambdaFunction"
                },
                "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
              }
            },
            "UpdateQuestionLambdaVersionPbZ1U5dKBJcY5v7G4tHvhsC4eAULSAWucVYSM4g94w": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "UpdateQuestionLambdaFunction"
                },
                "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
              }
            },
            "DeleteQuestionLambdaVersionslCroKfM8IIRP5l6DLkaKYtREpv01gq7p0jL8": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "DeleteQuestionLambdaFunction"
                },
                "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
              }
            },
            "AnswerQuestionLambdaVersion0e03ykbsiCbut8bKSIp1MmUCgRaHN5r60r5JulgA": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "AnswerQuestionLambdaFunction"
                },
                "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-quiztopia",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceSignup": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "signup",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceLogin": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "login",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceQuiz": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "quiz",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceQuizQuizidVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceQuiz"
                },
                "PathPart": "{quizId}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceQuizQuizidVarQuestion": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceQuizQuizidVar"
                },
                "PathPart": "question",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceQuizQuizidVarQuestion"
                },
                "PathPart": "{questionId}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVarAnswer": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVar"
                },
                "PathPart": "answer",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceQuizzes": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "quizzes",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceQuizzesUser": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceQuizzes"
                },
                "PathPart": "user",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceQuizzesUserUseridVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceQuizzesUser"
                },
                "PathPart": "{userId}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceQuizzesLocation": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceQuizzes"
                },
                "PathPart": "location",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodSignupPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceSignup"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "SignupLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "SignupLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodLoginPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceLogin"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "LoginLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "LoginLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodQuizPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceQuiz"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CreateQuizLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "CreateQuizLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodQuizQuizidVarDelete": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "DELETE",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceQuizQuizidVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "DeleteQuizLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "DeleteQuizLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodQuizQuizidVarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceQuizQuizidVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetQuizByQuizIdLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "GetQuizByQuizIdLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodQuizzesUserUseridVarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceQuizzesUserUseridVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetAllQuizzesByUserLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "GetAllQuizzesByUserLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodQuizzesLocationGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {
                  "method.request.querystring.latitude": true,
                  "method.request.querystring.longitude": true
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceQuizzesLocation"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetAllQuizzesByCoordinatesLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": [],
                "RequestValidatorId": {
                  "Ref": "ApiGatewayQuiztopiaRequestValidator"
                }
              },
              "DependsOn": [
                "GetAllQuizzesByCoordinatesLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodQuizQuizidVarQuestionPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceQuizQuizidVarQuestion"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "AddQuestionLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "AddQuestionLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarPut": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PUT",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "UpdateQuestionLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "UpdateQuestionLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarDelete": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "DELETE",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "DeleteQuestionLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "DeleteQuestionLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarAnswerPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVarAnswer"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "AnswerQuestionLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "AnswerQuestionLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayQuiztopiaRequestValidator": {
              "Type": "AWS::ApiGateway::RequestValidator",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ValidateRequestBody": true,
                "ValidateRequestParameters": true,
                "Name": "quiztopia-dev | Validate request body and querystring parameters"
              }
            },
            "ApiGatewayDeployment1759745179605": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodSignupPost",
                "ApiGatewayMethodLoginPost",
                "ApiGatewayMethodQuizPost",
                "ApiGatewayMethodQuizQuizidVarDelete",
                "ApiGatewayMethodQuizQuizidVarGet",
                "ApiGatewayMethodQuizzesUserUseridVarGet",
                "ApiGatewayMethodQuizzesLocationGet",
                "ApiGatewayMethodQuizQuizidVarQuestionPost",
                "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarPut",
                "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarDelete",
                "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarAnswerPost"
              ]
            },
            "SignupLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "SignupLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "LoginLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "LoginLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "CreateQuizLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateQuizLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "DeleteQuizLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "DeleteQuizLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GetQuizByQuizIdLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetQuizByQuizIdLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GetAllQuizzesByUserLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetAllQuizzesByUserLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GetAllQuizzesByCoordinatesLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetAllQuizzesByCoordinatesLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "AddQuestionLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "AddQuestionLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "UpdateQuestionLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UpdateQuestionLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "DeleteQuestionLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "DeleteQuestionLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "AnswerQuestionLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "AnswerQuestionLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
              "Export": {
                "Name": "sls-quiztopia-dev-ServerlessDeploymentBucketName"
              }
            },
            "SignupLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "SignupLambdaVersionGYhOlpCf3OxG8OQRN6KWFKQFqIJ4TaGOmdpGfKN5P4"
              },
              "Export": {
                "Name": "sls-quiztopia-dev-SignupLambdaFunctionQualifiedArn"
              }
            },
            "LoginLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "LoginLambdaVersionSA9r1WVNZ8L9qDrhowr17HnnD6wPcpNe7SxYA1Oek"
              },
              "Export": {
                "Name": "sls-quiztopia-dev-LoginLambdaFunctionQualifiedArn"
              }
            },
            "CreateQuizLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CreateQuizLambdaVersionE0QHsSKk7s4Y0f3BeGwKeyPT4gaYhdrZC4O0IVrDnQ"
              },
              "Export": {
                "Name": "sls-quiztopia-dev-CreateQuizLambdaFunctionQualifiedArn"
              }
            },
            "DeleteQuizLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "DeleteQuizLambdaVersionxVB4YRKWDgON3JoTEDEhKfhYeYo47lts9Gc1y9iaM9U"
              },
              "Export": {
                "Name": "sls-quiztopia-dev-DeleteQuizLambdaFunctionQualifiedArn"
              }
            },
            "GetQuizByQuizIdLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetQuizByQuizIdLambdaVersiontRJ5kjCVNGYlm2qjMIrlxrVwH8fLdq3kEBghN1aq44"
              },
              "Export": {
                "Name": "sls-quiztopia-dev-GetQuizByQuizIdLambdaFunctionQualifiedArn"
              }
            },
            "GetAllQuizzesByUserLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetAllQuizzesByUserLambdaVersionuj4u8A7sMu3P32uyBakK9mQuTHOxgrOOvexjfSj5Fw"
              },
              "Export": {
                "Name": "sls-quiztopia-dev-GetAllQuizzesByUserLambdaFunctionQualifiedArn"
              }
            },
            "GetAllQuizzesByCoordinatesLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetAllQuizzesByCoordinatesLambdaVersionR4qcFoPnr6rUMbJzj4rPw3zQAQSu56iNsLtCfiC5w"
              },
              "Export": {
                "Name": "sls-quiztopia-dev-GetAllQuizzesByCoordinatesLambdaFunctionQualifiedArn"
              }
            },
            "AddQuestionLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "AddQuestionLambdaVersion6dGm3byANuYV6AwHGAwOcPvrAmbg1cU8oyqRUh44"
              },
              "Export": {
                "Name": "sls-quiztopia-dev-AddQuestionLambdaFunctionQualifiedArn"
              }
            },
            "UpdateQuestionLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "UpdateQuestionLambdaVersionPbZ1U5dKBJcY5v7G4tHvhsC4eAULSAWucVYSM4g94w"
              },
              "Export": {
                "Name": "sls-quiztopia-dev-UpdateQuestionLambdaFunctionQualifiedArn"
              }
            },
            "DeleteQuestionLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "DeleteQuestionLambdaVersionslCroKfM8IIRP5l6DLkaKYtREpv01gq7p0jL8"
              },
              "Export": {
                "Name": "sls-quiztopia-dev-DeleteQuestionLambdaFunctionQualifiedArn"
              }
            },
            "AnswerQuestionLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "AnswerQuestionLambdaVersion0e03ykbsiCbut8bKSIp1MmUCgRaHN5r60r5JulgA"
              },
              "Export": {
                "Name": "sls-quiztopia-dev-AnswerQuestionLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-quiztopia-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "signup": {
          "handler": "functions/signUp/index.handler",
          "events": [
            {
              "http": {
                "path": "signup",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "quiztopia-dev-signup",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "SignupLambdaVersionGYhOlpCf3OxG8OQRN6KWFKQFqIJ4TaGOmdpGfKN5P4"
        },
        "login": {
          "handler": "functions/logIn/index.handler",
          "events": [
            {
              "http": {
                "path": "login",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "quiztopia-dev-login",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "LoginLambdaVersionSA9r1WVNZ8L9qDrhowr17HnnD6wPcpNe7SxYA1Oek"
        },
        "createQuiz": {
          "handler": "functions/createQuiz/index.handler",
          "events": [
            {
              "http": {
                "path": "quiz",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "quiztopia-dev-createQuiz",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "CreateQuizLambdaVersionE0QHsSKk7s4Y0f3BeGwKeyPT4gaYhdrZC4O0IVrDnQ"
        },
        "deleteQuiz": {
          "handler": "functions/deleteQuiz/index.handler",
          "events": [
            {
              "http": {
                "path": "quiz/{quizId}",
                "method": "delete",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "quiztopia-dev-deleteQuiz",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "DeleteQuizLambdaVersionxVB4YRKWDgON3JoTEDEhKfhYeYo47lts9Gc1y9iaM9U"
        },
        "getQuizByQuizId": {
          "handler": "functions/getQuizByQuizId/index.handler",
          "events": [
            {
              "http": {
                "path": "quiz/{quizId}",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "quiztopia-dev-getQuizByQuizId",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "GetQuizByQuizIdLambdaVersiontRJ5kjCVNGYlm2qjMIrlxrVwH8fLdq3kEBghN1aq44"
        },
        "getAllQuizzesByUser": {
          "handler": "functions/getAllQuizzesByUser/index.handler",
          "events": [
            {
              "http": {
                "path": "quizzes/user/{userId}",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "quiztopia-dev-getAllQuizzesByUser",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "GetAllQuizzesByUserLambdaVersionuj4u8A7sMu3P32uyBakK9mQuTHOxgrOOvexjfSj5Fw"
        },
        "getAllQuizzesByCoordinates": {
          "handler": "functions/getAllQuizzesByCoordinates/index.handler",
          "events": [
            {
              "http": {
                "path": "quizzes/location",
                "method": "get",
                "request": {
                  "parameters": {
                    "method.request.querystring.latitude": true,
                    "method.request.querystring.longitude": true
                  }
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "quiztopia-dev-getAllQuizzesByCoordinates",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "GetAllQuizzesByCoordinatesLambdaVersionR4qcFoPnr6rUMbJzj4rPw3zQAQSu56iNsLtCfiC5w"
        },
        "addQuestion": {
          "handler": "functions/addQuestionToQuiz/index.handler",
          "events": [
            {
              "http": {
                "path": "quiz/{quizId}/question",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "quiztopia-dev-addQuestion",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "AddQuestionLambdaVersion6dGm3byANuYV6AwHGAwOcPvrAmbg1cU8oyqRUh44"
        },
        "updateQuestion": {
          "handler": "functions/updateQuestion/index.handler",
          "events": [
            {
              "http": {
                "path": "quiz/{quizId}/question/{questionId}",
                "method": "put",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "quiztopia-dev-updateQuestion",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "UpdateQuestionLambdaVersionPbZ1U5dKBJcY5v7G4tHvhsC4eAULSAWucVYSM4g94w"
        },
        "deleteQuestion": {
          "handler": "functions/deleteQuestion/index.handler",
          "events": [
            {
              "http": {
                "path": "quiz/{quizId}/question/{questionId}",
                "method": "delete",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "quiztopia-dev-deleteQuestion",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "DeleteQuestionLambdaVersionslCroKfM8IIRP5l6DLkaKYtREpv01gq7p0jL8"
        },
        "answerQuestion": {
          "handler": "functions/answerQuestion/index.handler",
          "events": [
            {
              "http": {
                "path": "quiz/{quizId}/question/{questionId}/answer",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "quiztopia-dev-answerQuestion",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "AnswerQuestionLambdaVersion0e03ykbsiCbut8bKSIp1MmUCgRaHN5r60r5JulgA"
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs22.x",
      "region": "eu-north-1",
      "environment": {
        "QUIZGAME_TABLE": "QuizGame",
        "JWT_SECRET": "<REDACTED>"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:PutItem",
            "dynamodb:GetItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem",
            "dynamodb:Query",
            "dynamodb:Scan"
          ],
          "Resource": "arn:aws:dynamodb:eu-north-1:*:table/QuizGame"
        }
      ],
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "SignupLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-signup"
            }
          },
          "LoginLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-login"
            }
          },
          "CreateQuizLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-createQuiz"
            }
          },
          "DeleteQuizLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-deleteQuiz"
            }
          },
          "GetQuizByQuizIdLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-getQuizByQuizId"
            }
          },
          "GetAllQuizzesByUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-getAllQuizzesByUser"
            }
          },
          "GetAllQuizzesByCoordinatesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-getAllQuizzesByCoordinates"
            }
          },
          "AddQuestionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-addQuestion"
            }
          },
          "UpdateQuestionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-updateQuestion"
            }
          },
          "DeleteQuestionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-deleteQuestion"
            }
          },
          "AnswerQuestionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-answerQuestion"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "quiztopia",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quiztopia-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quiztopia-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:PutItem",
                          "dynamodb:GetItem",
                          "dynamodb:UpdateItem",
                          "dynamodb:DeleteItem",
                          "dynamodb:Query",
                          "dynamodb:Scan"
                        ],
                        "Resource": "arn:aws:dynamodb:eu-north-1:*:table/QuizGame"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "quiztopia",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "SignupLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
              },
              "Handler": "functions/signUp/index.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "quiztopia-dev-signup",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUIZGAME_TABLE": "QuizGame",
                  "JWT_SECRET": "<REDACTED>"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SignupLogGroup"
            ]
          },
          "LoginLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
              },
              "Handler": "functions/logIn/index.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "quiztopia-dev-login",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUIZGAME_TABLE": "QuizGame",
                  "JWT_SECRET": "<REDACTED>"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "LoginLogGroup"
            ]
          },
          "CreateQuizLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
              },
              "Handler": "functions/createQuiz/index.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "quiztopia-dev-createQuiz",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUIZGAME_TABLE": "QuizGame",
                  "JWT_SECRET": "<REDACTED>"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateQuizLogGroup"
            ]
          },
          "DeleteQuizLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
              },
              "Handler": "functions/deleteQuiz/index.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "quiztopia-dev-deleteQuiz",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUIZGAME_TABLE": "QuizGame",
                  "JWT_SECRET": "<REDACTED>"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteQuizLogGroup"
            ]
          },
          "GetQuizByQuizIdLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
              },
              "Handler": "functions/getQuizByQuizId/index.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "quiztopia-dev-getQuizByQuizId",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUIZGAME_TABLE": "QuizGame",
                  "JWT_SECRET": "<REDACTED>"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetQuizByQuizIdLogGroup"
            ]
          },
          "GetAllQuizzesByUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
              },
              "Handler": "functions/getAllQuizzesByUser/index.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "quiztopia-dev-getAllQuizzesByUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUIZGAME_TABLE": "QuizGame",
                  "JWT_SECRET": "<REDACTED>"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetAllQuizzesByUserLogGroup"
            ]
          },
          "GetAllQuizzesByCoordinatesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
              },
              "Handler": "functions/getAllQuizzesByCoordinates/index.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "quiztopia-dev-getAllQuizzesByCoordinates",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUIZGAME_TABLE": "QuizGame",
                  "JWT_SECRET": "<REDACTED>"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetAllQuizzesByCoordinatesLogGroup"
            ]
          },
          "AddQuestionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
              },
              "Handler": "functions/addQuestionToQuiz/index.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "quiztopia-dev-addQuestion",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUIZGAME_TABLE": "QuizGame",
                  "JWT_SECRET": "<REDACTED>"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AddQuestionLogGroup"
            ]
          },
          "UpdateQuestionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
              },
              "Handler": "functions/updateQuestion/index.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "quiztopia-dev-updateQuestion",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUIZGAME_TABLE": "QuizGame",
                  "JWT_SECRET": "<REDACTED>"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UpdateQuestionLogGroup"
            ]
          },
          "DeleteQuestionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
              },
              "Handler": "functions/deleteQuestion/index.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "quiztopia-dev-deleteQuestion",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUIZGAME_TABLE": "QuizGame",
                  "JWT_SECRET": "<REDACTED>"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteQuestionLogGroup"
            ]
          },
          "AnswerQuestionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
              },
              "Handler": "functions/answerQuestion/index.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "quiztopia-dev-answerQuestion",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUIZGAME_TABLE": "QuizGame",
                  "JWT_SECRET": "<REDACTED>"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AnswerQuestionLogGroup"
            ]
          },
          "SignupLambdaVersionGYhOlpCf3OxG8OQRN6KWFKQFqIJ4TaGOmdpGfKN5P4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SignupLambdaFunction"
              },
              "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
            }
          },
          "LoginLambdaVersionSA9r1WVNZ8L9qDrhowr17HnnD6wPcpNe7SxYA1Oek": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LoginLambdaFunction"
              },
              "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
            }
          },
          "CreateQuizLambdaVersionE0QHsSKk7s4Y0f3BeGwKeyPT4gaYhdrZC4O0IVrDnQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateQuizLambdaFunction"
              },
              "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
            }
          },
          "DeleteQuizLambdaVersionxVB4YRKWDgON3JoTEDEhKfhYeYo47lts9Gc1y9iaM9U": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteQuizLambdaFunction"
              },
              "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
            }
          },
          "GetQuizByQuizIdLambdaVersiontRJ5kjCVNGYlm2qjMIrlxrVwH8fLdq3kEBghN1aq44": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetQuizByQuizIdLambdaFunction"
              },
              "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
            }
          },
          "GetAllQuizzesByUserLambdaVersionuj4u8A7sMu3P32uyBakK9mQuTHOxgrOOvexjfSj5Fw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetAllQuizzesByUserLambdaFunction"
              },
              "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
            }
          },
          "GetAllQuizzesByCoordinatesLambdaVersionR4qcFoPnr6rUMbJzj4rPw3zQAQSu56iNsLtCfiC5w": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetAllQuizzesByCoordinatesLambdaFunction"
              },
              "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
            }
          },
          "AddQuestionLambdaVersion6dGm3byANuYV6AwHGAwOcPvrAmbg1cU8oyqRUh44": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AddQuestionLambdaFunction"
              },
              "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
            }
          },
          "UpdateQuestionLambdaVersionPbZ1U5dKBJcY5v7G4tHvhsC4eAULSAWucVYSM4g94w": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateQuestionLambdaFunction"
              },
              "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
            }
          },
          "DeleteQuestionLambdaVersionslCroKfM8IIRP5l6DLkaKYtREpv01gq7p0jL8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteQuestionLambdaFunction"
              },
              "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
            }
          },
          "AnswerQuestionLambdaVersion0e03ykbsiCbut8bKSIp1MmUCgRaHN5r60r5JulgA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AnswerQuestionLambdaFunction"
              },
              "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-quiztopia",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceSignup": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "signup",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceLogin": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "login",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceQuiz": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "quiz",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceQuizQuizidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceQuiz"
              },
              "PathPart": "{quizId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceQuizQuizidVarQuestion": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceQuizQuizidVar"
              },
              "PathPart": "question",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceQuizQuizidVarQuestion"
              },
              "PathPart": "{questionId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVarAnswer": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVar"
              },
              "PathPart": "answer",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceQuizzes": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "quizzes",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceQuizzesUser": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceQuizzes"
              },
              "PathPart": "user",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceQuizzesUserUseridVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceQuizzesUser"
              },
              "PathPart": "{userId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceQuizzesLocation": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceQuizzes"
              },
              "PathPart": "location",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodSignupPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceSignup"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SignupLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "SignupLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodLoginPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceLogin"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "LoginLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "LoginLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodQuizPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceQuiz"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateQuizLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreateQuizLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodQuizQuizidVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceQuizQuizidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteQuizLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DeleteQuizLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodQuizQuizidVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceQuizQuizidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetQuizByQuizIdLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetQuizByQuizIdLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodQuizzesUserUseridVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceQuizzesUserUseridVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetAllQuizzesByUserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetAllQuizzesByUserLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodQuizzesLocationGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.querystring.latitude": true,
                "method.request.querystring.longitude": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceQuizzesLocation"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetAllQuizzesByCoordinatesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayQuiztopiaRequestValidator"
              }
            },
            "DependsOn": [
              "GetAllQuizzesByCoordinatesLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodQuizQuizidVarQuestionPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceQuizQuizidVarQuestion"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AddQuestionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "AddQuestionLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UpdateQuestionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UpdateQuestionLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteQuestionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DeleteQuestionLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarAnswerPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVarAnswer"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AnswerQuestionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "AnswerQuestionLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayQuiztopiaRequestValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ValidateRequestBody": true,
              "ValidateRequestParameters": true,
              "Name": "quiztopia-dev | Validate request body and querystring parameters"
            }
          },
          "ApiGatewayDeployment1759745179605": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodSignupPost",
              "ApiGatewayMethodLoginPost",
              "ApiGatewayMethodQuizPost",
              "ApiGatewayMethodQuizQuizidVarDelete",
              "ApiGatewayMethodQuizQuizidVarGet",
              "ApiGatewayMethodQuizzesUserUseridVarGet",
              "ApiGatewayMethodQuizzesLocationGet",
              "ApiGatewayMethodQuizQuizidVarQuestionPost",
              "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarPut",
              "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarDelete",
              "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarAnswerPost"
            ]
          },
          "SignupLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SignupLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "LoginLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LoginLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreateQuizLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateQuizLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteQuizLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteQuizLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetQuizByQuizIdLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetQuizByQuizIdLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetAllQuizzesByUserLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetAllQuizzesByUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetAllQuizzesByCoordinatesLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetAllQuizzesByCoordinatesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AddQuestionLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AddQuestionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UpdateQuestionLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateQuestionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteQuestionLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteQuestionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AnswerQuestionLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AnswerQuestionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
            "Export": {
              "Name": "sls-quiztopia-dev-ServerlessDeploymentBucketName"
            }
          },
          "SignupLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SignupLambdaVersionGYhOlpCf3OxG8OQRN6KWFKQFqIJ4TaGOmdpGfKN5P4"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-SignupLambdaFunctionQualifiedArn"
            }
          },
          "LoginLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LoginLambdaVersionSA9r1WVNZ8L9qDrhowr17HnnD6wPcpNe7SxYA1Oek"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-LoginLambdaFunctionQualifiedArn"
            }
          },
          "CreateQuizLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateQuizLambdaVersionE0QHsSKk7s4Y0f3BeGwKeyPT4gaYhdrZC4O0IVrDnQ"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-CreateQuizLambdaFunctionQualifiedArn"
            }
          },
          "DeleteQuizLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteQuizLambdaVersionxVB4YRKWDgON3JoTEDEhKfhYeYo47lts9Gc1y9iaM9U"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-DeleteQuizLambdaFunctionQualifiedArn"
            }
          },
          "GetQuizByQuizIdLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetQuizByQuizIdLambdaVersiontRJ5kjCVNGYlm2qjMIrlxrVwH8fLdq3kEBghN1aq44"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-GetQuizByQuizIdLambdaFunctionQualifiedArn"
            }
          },
          "GetAllQuizzesByUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetAllQuizzesByUserLambdaVersionuj4u8A7sMu3P32uyBakK9mQuTHOxgrOOvexjfSj5Fw"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-GetAllQuizzesByUserLambdaFunctionQualifiedArn"
            }
          },
          "GetAllQuizzesByCoordinatesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetAllQuizzesByCoordinatesLambdaVersionR4qcFoPnr6rUMbJzj4rPw3zQAQSu56iNsLtCfiC5w"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-GetAllQuizzesByCoordinatesLambdaFunctionQualifiedArn"
            }
          },
          "AddQuestionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AddQuestionLambdaVersion6dGm3byANuYV6AwHGAwOcPvrAmbg1cU8oyqRUh44"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-AddQuestionLambdaFunctionQualifiedArn"
            }
          },
          "UpdateQuestionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateQuestionLambdaVersionPbZ1U5dKBJcY5v7G4tHvhsC4eAULSAWucVYSM4g94w"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-UpdateQuestionLambdaFunctionQualifiedArn"
            }
          },
          "DeleteQuestionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteQuestionLambdaVersionslCroKfM8IIRP5l6DLkaKYtREpv01gq7p0jL8"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-DeleteQuestionLambdaFunctionQualifiedArn"
            }
          },
          "AnswerQuestionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AnswerQuestionLambdaVersion0e03ykbsiCbut8bKSIp1MmUCgRaHN5r60r5JulgA"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-AnswerQuestionLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-quiztopia-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "service: quiztopia\n\nprovider:\n  name: aws\n  runtime: nodejs22.x\n  region: eu-north-1\n\n  environment:\n    QUIZGAME_TABLE: ${env:QUIZGAME_TABLE}\n    JWT_SECRET: ${env:JWT_SECRET}\n\n  iamRoleStatements:\n    - Effect: \"Allow\"\n      Action:\n        - dynamodb:PutItem\n        - dynamodb:GetItem\n        - dynamodb:UpdateItem\n        - dynamodb:DeleteItem\n        - dynamodb:Query\n        - dynamodb:Scan\n      Resource:\n      -  arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.QUIZGAME_TABLE}\n\nfunctions: \n  signup:\n    handler: functions/signUp/index.handler\n    events:\n      - http:\n          path: signup\n          method: post\n\n  login:\n    handler:  functions/logIn/index.handler\n    events:\n      - http:\n          path: login\n          method: post\n  \n  createQuiz:\n    handler: functions/createQuiz/index.handler\n    events:\n      - http:\n          path: quiz\n          method: post\n\n  deleteQuiz:\n    handler: functions/deleteQuiz/index.handler\n    events:\n      - http:\n          path: quiz/{quizId}\n          method: delete\n\n  getQuizByQuizId:\n    handler: functions/getQuizByQuizId/index.handler\n    events:\n      - http:\n          path: quiz/{quizId}\n          method: get\n          \n  getAllQuizzesByUser:\n    handler: functions/getAllQuizzesByUser/index.handler\n    events:\n      - http:\n          path: quizzes/user/{userId}\n          method: get\n\n  getAllQuizzesByCoordinates:\n    handler: functions/getAllQuizzesByCoordinates/index.handler\n    events:\n      - http:\n          path: quizzes/location\n          method: get\n          request:\n            parameters:\n              querystrings:\n                latitude: true\n                longitude: true\n\n\n  addQuestion:\n    handler: functions/addQuestionToQuiz/index.handler\n    events:\n      - http:\n          path: quiz/{quizId}/question\n          method: post\n\n  updateQuestion:\n    handler: functions/updateQuestion/index.handler\n    events:\n      - http:\n          path: quiz/{quizId}/question/{questionId}\n          method: put\n\n  deleteQuestion:\n    handler: functions/deleteQuestion/index.handler\n    events:\n      - http:\n          path: quiz/{quizId}/question/{questionId}\n          method: delete\n\n  answerQuestion:\n    handler: functions/answerQuestion/index.handler\n    events:\n      - http:\n          path: quiz/{quizId}/question/{questionId}/answer\n          method: post\n\n ",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "6036f3cf-02b8-44d3-a177-02d21e0f5c62",
    "orgName": "rubynights",
    "userId": "QMMxFv3Kk9XxnQN1Zx",
    "userName": "rubynights",
    "serviceProviderAwsAccountId": "245279657773",
    "serviceProviderAwsCfStackName": "quiztopia-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:eu-north-1:245279657773:stack/quiztopia-dev/c0036c00-9e99-11f0-8b48-0e7e11a4ac33",
    "serviceProviderAwsCfStackCreated": "2025-10-01T07:39:23.828Z",
    "serviceProviderAwsCfStackUpdated": "2025-10-06T10:01:36.536Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "DeleteQuestionLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:245279657773:function:quiztopia-dev-deleteQuestion:30",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-dev-DeleteQuestionLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetAllQuizzesByCoordinatesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:245279657773:function:quiztopia-dev-getAllQuizzesByCoordinates:28",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-dev-GetAllQuizzesByCoordinatesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CreateQuizLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:245279657773:function:quiztopia-dev-createQuiz:34",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-dev-CreateQuizLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "SignupLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:245279657773:function:quiztopia-dev-signup:43",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-dev-SignupLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UpdateQuestionLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:245279657773:function:quiztopia-dev-updateQuestion:30",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-dev-UpdateQuestionLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetQuizByQuizIdLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:245279657773:function:quiztopia-dev-getQuizByQuizId:18",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-dev-GetQuizByQuizIdLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
        "ExportName": "sls-quiztopia-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "DeleteQuizLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:245279657773:function:quiztopia-dev-deleteQuiz:33",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-dev-DeleteQuizLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "AnswerQuestionLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:245279657773:function:quiztopia-dev-answerQuestion:26",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-dev-AnswerQuestionLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetAllQuizzesByUserLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:245279657773:function:quiztopia-dev-getAllQuizzesByUser:28",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-dev-GetAllQuizzesByUserLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "AddQuestionLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:245279657773:function:quiztopia-dev-addQuestion:30",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-dev-AddQuestionLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "LoginLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:245279657773:function:quiztopia-dev-login:43",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-dev-LoginLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://jljrod168i.execute-api.eu-north-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-quiztopia-dev-ServiceEndpoint"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "SignupLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/quiztopia-dev-signup"
          }
        },
        "LoginLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/quiztopia-dev-login"
          }
        },
        "CreateQuizLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/quiztopia-dev-createQuiz"
          }
        },
        "DeleteQuizLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/quiztopia-dev-deleteQuiz"
          }
        },
        "GetQuizByQuizIdLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/quiztopia-dev-getQuizByQuizId"
          }
        },
        "GetAllQuizzesByUserLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/quiztopia-dev-getAllQuizzesByUser"
          }
        },
        "GetAllQuizzesByCoordinatesLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/quiztopia-dev-getAllQuizzesByCoordinates"
          }
        },
        "AddQuestionLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/quiztopia-dev-addQuestion"
          }
        },
        "UpdateQuestionLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/quiztopia-dev-updateQuestion"
          }
        },
        "DeleteQuestionLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/quiztopia-dev-deleteQuestion"
          }
        },
        "AnswerQuestionLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/quiztopia-dev-answerQuestion"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "quiztopia",
                      "dev",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quiztopia-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quiztopia-dev*:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:PutItem",
                        "dynamodb:GetItem",
                        "dynamodb:UpdateItem",
                        "dynamodb:DeleteItem",
                        "dynamodb:Query",
                        "dynamodb:Scan"
                      ],
                      "Resource": "arn:aws:dynamodb:eu-north-1:*:table/QuizGame"
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "quiztopia",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "SignupLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
              "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
            },
            "Handler": "functions/signUp/index.handler",
            "Runtime": "nodejs22.x",
            "FunctionName": "quiztopia-dev-signup",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "QUIZGAME_TABLE": "QuizGame",
                "JWT_SECRET": "<REDACTED>"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "SignupLogGroup"
          ]
        },
        "LoginLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
              "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
            },
            "Handler": "functions/logIn/index.handler",
            "Runtime": "nodejs22.x",
            "FunctionName": "quiztopia-dev-login",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "QUIZGAME_TABLE": "QuizGame",
                "JWT_SECRET": "<REDACTED>"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "LoginLogGroup"
          ]
        },
        "CreateQuizLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
              "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
            },
            "Handler": "functions/createQuiz/index.handler",
            "Runtime": "nodejs22.x",
            "FunctionName": "quiztopia-dev-createQuiz",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "QUIZGAME_TABLE": "QuizGame",
                "JWT_SECRET": "<REDACTED>"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "CreateQuizLogGroup"
          ]
        },
        "DeleteQuizLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
              "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
            },
            "Handler": "functions/deleteQuiz/index.handler",
            "Runtime": "nodejs22.x",
            "FunctionName": "quiztopia-dev-deleteQuiz",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "QUIZGAME_TABLE": "QuizGame",
                "JWT_SECRET": "<REDACTED>"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "DeleteQuizLogGroup"
          ]
        },
        "GetQuizByQuizIdLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
              "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
            },
            "Handler": "functions/getQuizByQuizId/index.handler",
            "Runtime": "nodejs22.x",
            "FunctionName": "quiztopia-dev-getQuizByQuizId",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "QUIZGAME_TABLE": "QuizGame",
                "JWT_SECRET": "<REDACTED>"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "GetQuizByQuizIdLogGroup"
          ]
        },
        "GetAllQuizzesByUserLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
              "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
            },
            "Handler": "functions/getAllQuizzesByUser/index.handler",
            "Runtime": "nodejs22.x",
            "FunctionName": "quiztopia-dev-getAllQuizzesByUser",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "QUIZGAME_TABLE": "QuizGame",
                "JWT_SECRET": "<REDACTED>"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "GetAllQuizzesByUserLogGroup"
          ]
        },
        "GetAllQuizzesByCoordinatesLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
              "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
            },
            "Handler": "functions/getAllQuizzesByCoordinates/index.handler",
            "Runtime": "nodejs22.x",
            "FunctionName": "quiztopia-dev-getAllQuizzesByCoordinates",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "QUIZGAME_TABLE": "QuizGame",
                "JWT_SECRET": "<REDACTED>"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "GetAllQuizzesByCoordinatesLogGroup"
          ]
        },
        "AddQuestionLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
              "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
            },
            "Handler": "functions/addQuestionToQuiz/index.handler",
            "Runtime": "nodejs22.x",
            "FunctionName": "quiztopia-dev-addQuestion",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "QUIZGAME_TABLE": "QuizGame",
                "JWT_SECRET": "<REDACTED>"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "AddQuestionLogGroup"
          ]
        },
        "UpdateQuestionLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
              "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
            },
            "Handler": "functions/updateQuestion/index.handler",
            "Runtime": "nodejs22.x",
            "FunctionName": "quiztopia-dev-updateQuestion",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "QUIZGAME_TABLE": "QuizGame",
                "JWT_SECRET": "<REDACTED>"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "UpdateQuestionLogGroup"
          ]
        },
        "DeleteQuestionLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
              "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
            },
            "Handler": "functions/deleteQuestion/index.handler",
            "Runtime": "nodejs22.x",
            "FunctionName": "quiztopia-dev-deleteQuestion",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "QUIZGAME_TABLE": "QuizGame",
                "JWT_SECRET": "<REDACTED>"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "DeleteQuestionLogGroup"
          ]
        },
        "AnswerQuestionLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
              "S3Key": "serverless/quiztopia/dev/1759745192116-2025-10-06T10:06:32.116Z/quiztopia.zip"
            },
            "Handler": "functions/answerQuestion/index.handler",
            "Runtime": "nodejs22.x",
            "FunctionName": "quiztopia-dev-answerQuestion",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "QUIZGAME_TABLE": "QuizGame",
                "JWT_SECRET": "<REDACTED>"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "AnswerQuestionLogGroup"
          ]
        },
        "SignupLambdaVersionGYhOlpCf3OxG8OQRN6KWFKQFqIJ4TaGOmdpGfKN5P4": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "SignupLambdaFunction"
            },
            "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
          }
        },
        "LoginLambdaVersionSA9r1WVNZ8L9qDrhowr17HnnD6wPcpNe7SxYA1Oek": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "LoginLambdaFunction"
            },
            "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
          }
        },
        "CreateQuizLambdaVersionE0QHsSKk7s4Y0f3BeGwKeyPT4gaYhdrZC4O0IVrDnQ": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "CreateQuizLambdaFunction"
            },
            "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
          }
        },
        "DeleteQuizLambdaVersionxVB4YRKWDgON3JoTEDEhKfhYeYo47lts9Gc1y9iaM9U": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "DeleteQuizLambdaFunction"
            },
            "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
          }
        },
        "GetQuizByQuizIdLambdaVersiontRJ5kjCVNGYlm2qjMIrlxrVwH8fLdq3kEBghN1aq44": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "GetQuizByQuizIdLambdaFunction"
            },
            "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
          }
        },
        "GetAllQuizzesByUserLambdaVersionuj4u8A7sMu3P32uyBakK9mQuTHOxgrOOvexjfSj5Fw": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "GetAllQuizzesByUserLambdaFunction"
            },
            "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
          }
        },
        "GetAllQuizzesByCoordinatesLambdaVersionR4qcFoPnr6rUMbJzj4rPw3zQAQSu56iNsLtCfiC5w": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "GetAllQuizzesByCoordinatesLambdaFunction"
            },
            "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
          }
        },
        "AddQuestionLambdaVersion6dGm3byANuYV6AwHGAwOcPvrAmbg1cU8oyqRUh44": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "AddQuestionLambdaFunction"
            },
            "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
          }
        },
        "UpdateQuestionLambdaVersionPbZ1U5dKBJcY5v7G4tHvhsC4eAULSAWucVYSM4g94w": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "UpdateQuestionLambdaFunction"
            },
            "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
          }
        },
        "DeleteQuestionLambdaVersionslCroKfM8IIRP5l6DLkaKYtREpv01gq7p0jL8": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "DeleteQuestionLambdaFunction"
            },
            "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
          }
        },
        "AnswerQuestionLambdaVersion0e03ykbsiCbut8bKSIp1MmUCgRaHN5r60r5JulgA": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "AnswerQuestionLambdaFunction"
            },
            "CodeSha256": "ot4F03wPrlsDg2BPPebDDte9VbqltfM/b5juuxA0fxE="
          }
        },
        "ApiGatewayRestApi": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "dev-quiztopia",
            "EndpointConfiguration": {
              "Types": [
                "EDGE"
              ]
            },
            "Policy": ""
          }
        },
        "ApiGatewayResourceSignup": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "signup",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceLogin": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "login",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceQuiz": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "quiz",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceQuizQuizidVar": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceQuiz"
            },
            "PathPart": "{quizId}",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceQuizQuizidVarQuestion": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceQuizQuizidVar"
            },
            "PathPart": "question",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVar": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceQuizQuizidVarQuestion"
            },
            "PathPart": "{questionId}",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVarAnswer": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVar"
            },
            "PathPart": "answer",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceQuizzes": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "quizzes",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceQuizzesUser": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceQuizzes"
            },
            "PathPart": "user",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceQuizzesUserUseridVar": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceQuizzesUser"
            },
            "PathPart": "{userId}",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceQuizzesLocation": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceQuizzes"
            },
            "PathPart": "location",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodSignupPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceSignup"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "SignupLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "SignupLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodLoginPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceLogin"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "LoginLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "LoginLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodQuizPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceQuiz"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "CreateQuizLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "CreateQuizLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodQuizQuizidVarDelete": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "DELETE",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceQuizQuizidVar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "DeleteQuizLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "DeleteQuizLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodQuizQuizidVarGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceQuizQuizidVar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "GetQuizByQuizIdLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "GetQuizByQuizIdLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodQuizzesUserUseridVarGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceQuizzesUserUseridVar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "GetAllQuizzesByUserLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "GetAllQuizzesByUserLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodQuizzesLocationGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {
              "method.request.querystring.latitude": true,
              "method.request.querystring.longitude": true
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceQuizzesLocation"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "GetAllQuizzesByCoordinatesLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": [],
            "RequestValidatorId": {
              "Ref": "ApiGatewayQuiztopiaRequestValidator"
            }
          },
          "DependsOn": [
            "GetAllQuizzesByCoordinatesLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodQuizQuizidVarQuestionPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceQuizQuizidVarQuestion"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "AddQuestionLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "AddQuestionLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarPut": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "PUT",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "UpdateQuestionLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "UpdateQuestionLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarDelete": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "DELETE",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "DeleteQuestionLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "DeleteQuestionLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarAnswerPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVarAnswer"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "AnswerQuestionLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "AnswerQuestionLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayQuiztopiaRequestValidator": {
          "Type": "AWS::ApiGateway::RequestValidator",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ValidateRequestBody": true,
            "ValidateRequestParameters": true,
            "Name": "quiztopia-dev | Validate request body and querystring parameters"
          }
        },
        "ApiGatewayDeployment1759745179605": {
          "Type": "AWS::ApiGateway::Deployment",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "StageName": "dev"
          },
          "DependsOn": [
            "ApiGatewayMethodSignupPost",
            "ApiGatewayMethodLoginPost",
            "ApiGatewayMethodQuizPost",
            "ApiGatewayMethodQuizQuizidVarDelete",
            "ApiGatewayMethodQuizQuizidVarGet",
            "ApiGatewayMethodQuizzesUserUseridVarGet",
            "ApiGatewayMethodQuizzesLocationGet",
            "ApiGatewayMethodQuizQuizidVarQuestionPost",
            "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarPut",
            "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarDelete",
            "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarAnswerPost"
          ]
        },
        "SignupLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "SignupLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "LoginLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "LoginLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "CreateQuizLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "CreateQuizLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "DeleteQuizLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "DeleteQuizLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "GetQuizByQuizIdLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "GetQuizByQuizIdLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "GetAllQuizzesByUserLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "GetAllQuizzesByUserLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "GetAllQuizzesByCoordinatesLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "GetAllQuizzesByCoordinatesLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "AddQuestionLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "AddQuestionLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "UpdateQuestionLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "UpdateQuestionLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "DeleteQuestionLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "DeleteQuestionLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "AnswerQuestionLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "AnswerQuestionLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
          "Export": {
            "Name": "sls-quiztopia-dev-ServerlessDeploymentBucketName"
          }
        },
        "SignupLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "SignupLambdaVersionGYhOlpCf3OxG8OQRN6KWFKQFqIJ4TaGOmdpGfKN5P4"
          },
          "Export": {
            "Name": "sls-quiztopia-dev-SignupLambdaFunctionQualifiedArn"
          }
        },
        "LoginLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "LoginLambdaVersionSA9r1WVNZ8L9qDrhowr17HnnD6wPcpNe7SxYA1Oek"
          },
          "Export": {
            "Name": "sls-quiztopia-dev-LoginLambdaFunctionQualifiedArn"
          }
        },
        "CreateQuizLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "CreateQuizLambdaVersionE0QHsSKk7s4Y0f3BeGwKeyPT4gaYhdrZC4O0IVrDnQ"
          },
          "Export": {
            "Name": "sls-quiztopia-dev-CreateQuizLambdaFunctionQualifiedArn"
          }
        },
        "DeleteQuizLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "DeleteQuizLambdaVersionxVB4YRKWDgON3JoTEDEhKfhYeYo47lts9Gc1y9iaM9U"
          },
          "Export": {
            "Name": "sls-quiztopia-dev-DeleteQuizLambdaFunctionQualifiedArn"
          }
        },
        "GetQuizByQuizIdLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "GetQuizByQuizIdLambdaVersiontRJ5kjCVNGYlm2qjMIrlxrVwH8fLdq3kEBghN1aq44"
          },
          "Export": {
            "Name": "sls-quiztopia-dev-GetQuizByQuizIdLambdaFunctionQualifiedArn"
          }
        },
        "GetAllQuizzesByUserLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "GetAllQuizzesByUserLambdaVersionuj4u8A7sMu3P32uyBakK9mQuTHOxgrOOvexjfSj5Fw"
          },
          "Export": {
            "Name": "sls-quiztopia-dev-GetAllQuizzesByUserLambdaFunctionQualifiedArn"
          }
        },
        "GetAllQuizzesByCoordinatesLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "GetAllQuizzesByCoordinatesLambdaVersionR4qcFoPnr6rUMbJzj4rPw3zQAQSu56iNsLtCfiC5w"
          },
          "Export": {
            "Name": "sls-quiztopia-dev-GetAllQuizzesByCoordinatesLambdaFunctionQualifiedArn"
          }
        },
        "AddQuestionLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "AddQuestionLambdaVersion6dGm3byANuYV6AwHGAwOcPvrAmbg1cU8oyqRUh44"
          },
          "Export": {
            "Name": "sls-quiztopia-dev-AddQuestionLambdaFunctionQualifiedArn"
          }
        },
        "UpdateQuestionLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "UpdateQuestionLambdaVersionPbZ1U5dKBJcY5v7G4tHvhsC4eAULSAWucVYSM4g94w"
          },
          "Export": {
            "Name": "sls-quiztopia-dev-UpdateQuestionLambdaFunctionQualifiedArn"
          }
        },
        "DeleteQuestionLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "DeleteQuestionLambdaVersionslCroKfM8IIRP5l6DLkaKYtREpv01gq7p0jL8"
          },
          "Export": {
            "Name": "sls-quiztopia-dev-DeleteQuestionLambdaFunctionQualifiedArn"
          }
        },
        "AnswerQuestionLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "AnswerQuestionLambdaVersion0e03ykbsiCbut8bKSIp1MmUCgRaHN5r60r5JulgA"
          },
          "Export": {
            "Name": "sls-quiztopia-dev-AnswerQuestionLambdaFunctionQualifiedArn"
          }
        },
        "ServiceEndpoint": {
          "Description": "URL of the service endpoint",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "ApiGatewayRestApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                },
                "/dev"
              ]
            ]
          },
          "Export": {
            "Name": "sls-quiztopia-dev-ServiceEndpoint"
          }
        }
      }
    }
  }
}