{
  "service": {
    "service": "quiztopia",
    "serviceObject": {
      "name": "quiztopia"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs22.x",
      "region": "eu-north-1",
      "environment": {
        "QUIZGAME_TABLE": "QuizGame",
        "JWT_SECRET": "woeiawld3982smnrews1"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:PutItem",
            "dynamodb:GetItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem",
            "dynamodb:Query",
            "dynamodb:Scan"
          ],
          "Resource": "arn:aws:dynamodb:eu-north-1:*:table/QuizGame"
        }
      ],
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "SignupLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-signup"
            }
          },
          "LoginLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-login"
            }
          },
          "CreateQuizLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-createQuiz"
            }
          },
          "DeleteQuizLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-deleteQuiz"
            }
          },
          "GetQuizByQuizIdLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-getQuizByQuizId"
            }
          },
          "GetAllQuizzesByUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-getAllQuizzesByUser"
            }
          },
          "GetAllQuizzesByCoordinatesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-getAllQuizzesByCoordinates"
            }
          },
          "AddQuestionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-addQuestion"
            }
          },
          "UpdateQuestionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-updateQuestion"
            }
          },
          "DeleteQuestionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-deleteQuestion"
            }
          },
          "AnswerQuestionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-answerQuestion"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "quiztopia",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quiztopia-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quiztopia-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "quiztopia",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "SignupLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                "S3Key": "serverless/quiztopia/dev/1759830024072-2025-10-07T09:40:24.072Z/quiztopia.zip"
              },
              "Handler": "functions/signUp/index.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "quiztopia-dev-signup",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUIZGAME_TABLE": "QuizGame",
                  "JWT_SECRET": "woeiawld3982smnrews1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SignupLogGroup"
            ]
          },
          "LoginLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                "S3Key": "serverless/quiztopia/dev/1759830024072-2025-10-07T09:40:24.072Z/quiztopia.zip"
              },
              "Handler": "functions/logIn/index.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "quiztopia-dev-login",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUIZGAME_TABLE": "QuizGame",
                  "JWT_SECRET": "woeiawld3982smnrews1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "LoginLogGroup"
            ]
          },
          "CreateQuizLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                "S3Key": "serverless/quiztopia/dev/1759830024072-2025-10-07T09:40:24.072Z/quiztopia.zip"
              },
              "Handler": "functions/createQuiz/index.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "quiztopia-dev-createQuiz",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUIZGAME_TABLE": "QuizGame",
                  "JWT_SECRET": "woeiawld3982smnrews1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateQuizLogGroup"
            ]
          },
          "DeleteQuizLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                "S3Key": "serverless/quiztopia/dev/1759830024072-2025-10-07T09:40:24.072Z/quiztopia.zip"
              },
              "Handler": "functions/deleteQuiz/index.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "quiztopia-dev-deleteQuiz",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUIZGAME_TABLE": "QuizGame",
                  "JWT_SECRET": "woeiawld3982smnrews1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteQuizLogGroup"
            ]
          },
          "GetQuizByQuizIdLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                "S3Key": "serverless/quiztopia/dev/1759830024072-2025-10-07T09:40:24.072Z/quiztopia.zip"
              },
              "Handler": "functions/getQuizByQuizId/index.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "quiztopia-dev-getQuizByQuizId",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUIZGAME_TABLE": "QuizGame",
                  "JWT_SECRET": "woeiawld3982smnrews1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetQuizByQuizIdLogGroup"
            ]
          },
          "GetAllQuizzesByUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                "S3Key": "serverless/quiztopia/dev/1759830024072-2025-10-07T09:40:24.072Z/quiztopia.zip"
              },
              "Handler": "functions/getAllQuizzesByUser/index.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "quiztopia-dev-getAllQuizzesByUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUIZGAME_TABLE": "QuizGame",
                  "JWT_SECRET": "woeiawld3982smnrews1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetAllQuizzesByUserLogGroup"
            ]
          },
          "GetAllQuizzesByCoordinatesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                "S3Key": "serverless/quiztopia/dev/1759830024072-2025-10-07T09:40:24.072Z/quiztopia.zip"
              },
              "Handler": "functions/getAllQuizzesByCoordinates/index.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "quiztopia-dev-getAllQuizzesByCoordinates",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUIZGAME_TABLE": "QuizGame",
                  "JWT_SECRET": "woeiawld3982smnrews1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetAllQuizzesByCoordinatesLogGroup"
            ]
          },
          "AddQuestionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                "S3Key": "serverless/quiztopia/dev/1759830024072-2025-10-07T09:40:24.072Z/quiztopia.zip"
              },
              "Handler": "functions/addQuestionToQuiz/index.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "quiztopia-dev-addQuestion",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUIZGAME_TABLE": "QuizGame",
                  "JWT_SECRET": "woeiawld3982smnrews1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AddQuestionLogGroup"
            ]
          },
          "UpdateQuestionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                "S3Key": "serverless/quiztopia/dev/1759830024072-2025-10-07T09:40:24.072Z/quiztopia.zip"
              },
              "Handler": "functions/updateQuestion/index.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "quiztopia-dev-updateQuestion",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUIZGAME_TABLE": "QuizGame",
                  "JWT_SECRET": "woeiawld3982smnrews1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UpdateQuestionLogGroup"
            ]
          },
          "DeleteQuestionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                "S3Key": "serverless/quiztopia/dev/1759830024072-2025-10-07T09:40:24.072Z/quiztopia.zip"
              },
              "Handler": "functions/deleteQuestion/index.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "quiztopia-dev-deleteQuestion",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUIZGAME_TABLE": "QuizGame",
                  "JWT_SECRET": "woeiawld3982smnrews1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteQuestionLogGroup"
            ]
          },
          "AnswerQuestionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
                "S3Key": "serverless/quiztopia/dev/1759830024072-2025-10-07T09:40:24.072Z/quiztopia.zip"
              },
              "Handler": "functions/answerQuestion/index.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "quiztopia-dev-answerQuestion",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUIZGAME_TABLE": "QuizGame",
                  "JWT_SECRET": "woeiawld3982smnrews1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AnswerQuestionLogGroup"
            ]
          },
          "SignupLambdaVersionHGElHg4m2NW1G5FFwsbO3hpY0kd9PhnAy24vuzCuw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SignupLambdaFunction"
              },
              "CodeSha256": "MlCq9Mbz0xNf2tsG1of8sFQm1107UB7O/GvQ8MqXYiE="
            }
          },
          "LoginLambdaVersionGoEskWKkNmSmsCJeeFjNJ5mq3r6D8CGdqdU0O2ypA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LoginLambdaFunction"
              },
              "CodeSha256": "MlCq9Mbz0xNf2tsG1of8sFQm1107UB7O/GvQ8MqXYiE="
            }
          },
          "CreateQuizLambdaVersion5e9GMPOYogixJBl204B4u08lOQXxDhNirGyGxiLes": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateQuizLambdaFunction"
              },
              "CodeSha256": "MlCq9Mbz0xNf2tsG1of8sFQm1107UB7O/GvQ8MqXYiE="
            }
          },
          "DeleteQuizLambdaVersionxDdZVWFpSEDv0Pi9VWxrrx23OGSL6np08LDxkEyfE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteQuizLambdaFunction"
              },
              "CodeSha256": "MlCq9Mbz0xNf2tsG1of8sFQm1107UB7O/GvQ8MqXYiE="
            }
          },
          "GetQuizByQuizIdLambdaVersionAu78bC5OUpRLFZPwcDe0vVTtieqyxg2SluyxZxK2J8k": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetQuizByQuizIdLambdaFunction"
              },
              "CodeSha256": "MlCq9Mbz0xNf2tsG1of8sFQm1107UB7O/GvQ8MqXYiE="
            }
          },
          "GetAllQuizzesByUserLambdaVersionRMB7UJdf1nGoQZ9pcIVJQDTkdlEaz9Lpm1kdceXpdu4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetAllQuizzesByUserLambdaFunction"
              },
              "CodeSha256": "MlCq9Mbz0xNf2tsG1of8sFQm1107UB7O/GvQ8MqXYiE="
            }
          },
          "GetAllQuizzesByCoordinatesLambdaVersionaMR4A5yC9CD9CXAlVHo72KBvHLJmZFv3eVIvUetgIhI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetAllQuizzesByCoordinatesLambdaFunction"
              },
              "CodeSha256": "MlCq9Mbz0xNf2tsG1of8sFQm1107UB7O/GvQ8MqXYiE="
            }
          },
          "AddQuestionLambdaVersionUi9Rcux0epqjkVaqRrmrdGuqhbyPn8Q13kHrTIgOgc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AddQuestionLambdaFunction"
              },
              "CodeSha256": "MlCq9Mbz0xNf2tsG1of8sFQm1107UB7O/GvQ8MqXYiE="
            }
          },
          "UpdateQuestionLambdaVersionUgWbjujMvDvblwa7UdftZDMLx7j0J20AmaQErZTM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateQuestionLambdaFunction"
              },
              "CodeSha256": "MlCq9Mbz0xNf2tsG1of8sFQm1107UB7O/GvQ8MqXYiE="
            }
          },
          "DeleteQuestionLambdaVersionnPe7L0Ez56C9jQedgnID75REM6md9quRr2lxxZAkxM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteQuestionLambdaFunction"
              },
              "CodeSha256": "MlCq9Mbz0xNf2tsG1of8sFQm1107UB7O/GvQ8MqXYiE="
            }
          },
          "AnswerQuestionLambdaVersionP62l08YLeU8AhAtjQyt4fxQubm8Q4qWzuhJcZzcbX8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AnswerQuestionLambdaFunction"
              },
              "CodeSha256": "MlCq9Mbz0xNf2tsG1of8sFQm1107UB7O/GvQ8MqXYiE="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-quiztopia",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceSignup": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "signup",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceLogin": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "login",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceQuiz": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "quiz",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceQuizQuizidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceQuiz"
              },
              "PathPart": "{quizId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceQuizQuizidVarQuestion": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceQuizQuizidVar"
              },
              "PathPart": "question",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceQuizQuizidVarQuestion"
              },
              "PathPart": "{questionId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVarAnswer": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVar"
              },
              "PathPart": "answer",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceQuizzes": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "quizzes",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceQuizzesUser": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceQuizzes"
              },
              "PathPart": "user",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceQuizzesUserUseridVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceQuizzesUser"
              },
              "PathPart": "{userId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceQuizzesLocation": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceQuizzes"
              },
              "PathPart": "location",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodSignupPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceSignup"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SignupLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "SignupLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodLoginPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceLogin"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "LoginLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "LoginLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodQuizPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceQuiz"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateQuizLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreateQuizLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodQuizQuizidVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceQuizQuizidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteQuizLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DeleteQuizLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodQuizQuizidVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceQuizQuizidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetQuizByQuizIdLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetQuizByQuizIdLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodQuizzesUserUseridVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceQuizzesUserUseridVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetAllQuizzesByUserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetAllQuizzesByUserLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodQuizzesLocationGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.querystring.latitude": true,
                "method.request.querystring.longitude": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceQuizzesLocation"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetAllQuizzesByCoordinatesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayQuiztopiaRequestValidator"
              }
            },
            "DependsOn": [
              "GetAllQuizzesByCoordinatesLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodQuizQuizidVarQuestionPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceQuizQuizidVarQuestion"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AddQuestionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "AddQuestionLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UpdateQuestionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UpdateQuestionLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteQuestionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DeleteQuestionLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarAnswerPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceQuizQuizidVarQuestionQuestionidVarAnswer"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AnswerQuestionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "AnswerQuestionLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayQuiztopiaRequestValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ValidateRequestBody": true,
              "ValidateRequestParameters": true,
              "Name": "quiztopia-dev | Validate request body and querystring parameters"
            }
          },
          "ApiGatewayDeployment1759830009366": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodSignupPost",
              "ApiGatewayMethodLoginPost",
              "ApiGatewayMethodQuizPost",
              "ApiGatewayMethodQuizQuizidVarDelete",
              "ApiGatewayMethodQuizQuizidVarGet",
              "ApiGatewayMethodQuizzesUserUseridVarGet",
              "ApiGatewayMethodQuizzesLocationGet",
              "ApiGatewayMethodQuizQuizidVarQuestionPost",
              "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarPut",
              "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarDelete",
              "ApiGatewayMethodQuizQuizidVarQuestionQuestionidVarAnswerPost"
            ]
          },
          "SignupLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SignupLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "LoginLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LoginLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreateQuizLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateQuizLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteQuizLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteQuizLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetQuizByQuizIdLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetQuizByQuizIdLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetAllQuizzesByUserLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetAllQuizzesByUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetAllQuizzesByCoordinatesLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetAllQuizzesByCoordinatesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AddQuestionLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AddQuestionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UpdateQuestionLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateQuestionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteQuestionLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteQuestionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AnswerQuestionLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AnswerQuestionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-eu-north-1-c87f178f-c83b",
            "Export": {
              "Name": "sls-quiztopia-dev-ServerlessDeploymentBucketName"
            }
          },
          "SignupLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SignupLambdaVersionHGElHg4m2NW1G5FFwsbO3hpY0kd9PhnAy24vuzCuw"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-SignupLambdaFunctionQualifiedArn"
            }
          },
          "LoginLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LoginLambdaVersionGoEskWKkNmSmsCJeeFjNJ5mq3r6D8CGdqdU0O2ypA"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-LoginLambdaFunctionQualifiedArn"
            }
          },
          "CreateQuizLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateQuizLambdaVersion5e9GMPOYogixJBl204B4u08lOQXxDhNirGyGxiLes"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-CreateQuizLambdaFunctionQualifiedArn"
            }
          },
          "DeleteQuizLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteQuizLambdaVersionxDdZVWFpSEDv0Pi9VWxrrx23OGSL6np08LDxkEyfE"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-DeleteQuizLambdaFunctionQualifiedArn"
            }
          },
          "GetQuizByQuizIdLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetQuizByQuizIdLambdaVersionAu78bC5OUpRLFZPwcDe0vVTtieqyxg2SluyxZxK2J8k"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-GetQuizByQuizIdLambdaFunctionQualifiedArn"
            }
          },
          "GetAllQuizzesByUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetAllQuizzesByUserLambdaVersionRMB7UJdf1nGoQZ9pcIVJQDTkdlEaz9Lpm1kdceXpdu4"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-GetAllQuizzesByUserLambdaFunctionQualifiedArn"
            }
          },
          "GetAllQuizzesByCoordinatesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetAllQuizzesByCoordinatesLambdaVersionaMR4A5yC9CD9CXAlVHo72KBvHLJmZFv3eVIvUetgIhI"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-GetAllQuizzesByCoordinatesLambdaFunctionQualifiedArn"
            }
          },
          "AddQuestionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AddQuestionLambdaVersionUi9Rcux0epqjkVaqRrmrdGuqhbyPn8Q13kHrTIgOgc"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-AddQuestionLambdaFunctionQualifiedArn"
            }
          },
          "UpdateQuestionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateQuestionLambdaVersionUgWbjujMvDvblwa7UdftZDMLx7j0J20AmaQErZTM"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-UpdateQuestionLambdaFunctionQualifiedArn"
            }
          },
          "DeleteQuestionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteQuestionLambdaVersionnPe7L0Ez56C9jQedgnID75REM6md9quRr2lxxZAkxM"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-DeleteQuestionLambdaFunctionQualifiedArn"
            }
          },
          "AnswerQuestionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AnswerQuestionLambdaVersionP62l08YLeU8AhAtjQyt4fxQubm8Q4qWzuhJcZzcbX8"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-AnswerQuestionLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-quiztopia-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "signup": {
        "handler": "functions/signUp/index.handler",
        "events": [
          {
            "http": {
              "path": "signup",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "quiztopia-dev-signup",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs22.x",
        "vpc": {},
        "versionLogicalId": "SignupLambdaVersionHGElHg4m2NW1G5FFwsbO3hpY0kd9PhnAy24vuzCuw"
      },
      "login": {
        "handler": "functions/logIn/index.handler",
        "events": [
          {
            "http": {
              "path": "login",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "quiztopia-dev-login",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs22.x",
        "vpc": {},
        "versionLogicalId": "LoginLambdaVersionGoEskWKkNmSmsCJeeFjNJ5mq3r6D8CGdqdU0O2ypA"
      },
      "createQuiz": {
        "handler": "functions/createQuiz/index.handler",
        "events": [
          {
            "http": {
              "path": "quiz",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "quiztopia-dev-createQuiz",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs22.x",
        "vpc": {},
        "versionLogicalId": "CreateQuizLambdaVersion5e9GMPOYogixJBl204B4u08lOQXxDhNirGyGxiLes"
      },
      "deleteQuiz": {
        "handler": "functions/deleteQuiz/index.handler",
        "events": [
          {
            "http": {
              "path": "quiz/{quizId}",
              "method": "delete",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "quiztopia-dev-deleteQuiz",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs22.x",
        "vpc": {},
        "versionLogicalId": "DeleteQuizLambdaVersionxDdZVWFpSEDv0Pi9VWxrrx23OGSL6np08LDxkEyfE"
      },
      "getQuizByQuizId": {
        "handler": "functions/getQuizByQuizId/index.handler",
        "events": [
          {
            "http": {
              "path": "quiz/{quizId}",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "quiztopia-dev-getQuizByQuizId",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs22.x",
        "vpc": {},
        "versionLogicalId": "GetQuizByQuizIdLambdaVersionAu78bC5OUpRLFZPwcDe0vVTtieqyxg2SluyxZxK2J8k"
      },
      "getAllQuizzesByUser": {
        "handler": "functions/getAllQuizzesByUser/index.handler",
        "events": [
          {
            "http": {
              "path": "quizzes/user/{userId}",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "quiztopia-dev-getAllQuizzesByUser",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs22.x",
        "vpc": {},
        "versionLogicalId": "GetAllQuizzesByUserLambdaVersionRMB7UJdf1nGoQZ9pcIVJQDTkdlEaz9Lpm1kdceXpdu4"
      },
      "getAllQuizzesByCoordinates": {
        "handler": "functions/getAllQuizzesByCoordinates/index.handler",
        "events": [
          {
            "http": {
              "path": "quizzes/location",
              "method": "get",
              "request": {
                "parameters": {
                  "method.request.querystring.latitude": true,
                  "method.request.querystring.longitude": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "quiztopia-dev-getAllQuizzesByCoordinates",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs22.x",
        "vpc": {},
        "versionLogicalId": "GetAllQuizzesByCoordinatesLambdaVersionaMR4A5yC9CD9CXAlVHo72KBvHLJmZFv3eVIvUetgIhI"
      },
      "addQuestion": {
        "handler": "functions/addQuestionToQuiz/index.handler",
        "events": [
          {
            "http": {
              "path": "quiz/{quizId}/question",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "quiztopia-dev-addQuestion",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs22.x",
        "vpc": {},
        "versionLogicalId": "AddQuestionLambdaVersionUi9Rcux0epqjkVaqRrmrdGuqhbyPn8Q13kHrTIgOgc"
      },
      "updateQuestion": {
        "handler": "functions/updateQuestion/index.handler",
        "events": [
          {
            "http": {
              "path": "quiz/{quizId}/question/{questionId}",
              "method": "put",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "quiztopia-dev-updateQuestion",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs22.x",
        "vpc": {},
        "versionLogicalId": "UpdateQuestionLambdaVersionUgWbjujMvDvblwa7UdftZDMLx7j0J20AmaQErZTM"
      },
      "deleteQuestion": {
        "handler": "functions/deleteQuestion/index.handler",
        "events": [
          {
            "http": {
              "path": "quiz/{quizId}/question/{questionId}",
              "method": "delete",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "quiztopia-dev-deleteQuestion",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs22.x",
        "vpc": {},
        "versionLogicalId": "DeleteQuestionLambdaVersionnPe7L0Ez56C9jQedgnID75REM6md9quRr2lxxZAkxM"
      },
      "answerQuestion": {
        "handler": "functions/answerQuestion/index.handler",
        "events": [
          {
            "http": {
              "path": "quiz/{quizId}/question/{questionId}/answer",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "quiztopia-dev-answerQuestion",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs22.x",
        "vpc": {},
        "versionLogicalId": "AnswerQuestionLambdaVersionP62l08YLeU8AhAtjQyt4fxQubm8Q4qWzuhJcZzcbX8"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless",
    "initialServerlessConfig": {
      "service": "quiztopia",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "appId": null,
    "orgId": null,
    "layers": {},
    "artifact": "/Users/boan/work/js24/quiztopia/.serverless/quiztopia.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/quiztopia/dev/1759830024072-2025-10-07T09:40:24.072Z",
    "artifact": "quiztopia.zip"
  }
}